name: build
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - 'build/env/**'
      - 'build/terraform/**'
      - 'docs/**'

jobs:
  test:
    name: test
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: "1.19.4" # The Go version to download (if necessary) and use.
          cache: true

      - name: Install dependencies
        run: sudo apt-get install -y libsodium-dev libczmq-dev libzmq3-dev

      - name: Lint
        run: ./build/hack/lint-check.sh

      - name: Test
        run: go test ./...

      - name: Coverage
        run: ./build/hack/coverage.sh

  build:
    name: build
    runs-on: ubuntu-22.04
    needs: [test]
    if: github.event_name == 'push'
    steps:
        - uses: actions/checkout@v3

        - name: Login to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: edobtc/cloudkit
            tags: |
              type=schedule
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
              type=semver,pattern={{major}}
              type=ref,event=branch
              type=ref,event=pr
              type=sha

        - name: Cache Docker layers
          uses: actions/cache@v3
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        - name: Build and push
          uses: docker/build-push-action@v3
          with:
            cache-from: |
              type=local,src=/tmp/.buildx-cache
            cache-to: |
              type=local,dest=/tmp/.buildx-cache-new
            context: .
            file: build/docker/Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

        - name: Move cache
          run: |
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
